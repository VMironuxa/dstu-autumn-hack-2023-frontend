{"ast":null,"code":"import { createApi } from \"@reduxjs/toolkit/query/react\";\nimport { baseQuery } from \"./settings\";\nexport const flightApi = createApi({\n  reducerPath: \"casesApi\",\n  baseQuery,\n  tagTypes: [\"orders\", \"order\"],\n  endpoints: build => ({\n    getFlights: build.query({\n      query: () => ({\n        url: `/api/flight/?arrivalPoint=<Куда>&departurePoint=<Откуда>&date=<01.01.2000>\n        `,\n        method: \"GET\"\n      })\n    }),\n    /////\n\n    getSpecializations: build.query({\n      query: () => ({\n        url: `/specialization/`,\n        method: \"GET\"\n      })\n    }),\n    getOrders: build.query({\n      query: _ref => {\n        let {\n          page,\n          seacrh,\n          filter\n        } = _ref;\n        return {\n          url: `/order/?page=${page}${seacrh ? \"&search=\" + seacrh : \"\"}${filter ? \"&filter=\" + filter : \"\"}`,\n          method: \"GET\"\n        };\n      },\n      providesTags: () => [\"orders\"]\n    }),\n    getOrder: build.query({\n      query: id => ({\n        url: `/order/${id}`,\n        method: \"GET\"\n      }),\n      providesTags: () => [\"order\"]\n    }),\n    сreateResponse: build.mutation({\n      query: body => ({\n        url: `/executor/response`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    archiveOrder: build.mutation({\n      query: body => ({\n        url: `/order/archive`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    activeOrder: build.mutation({\n      query: body => ({\n        url: `/order/active`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    createOrder: build.mutation({\n      query: body => ({\n        url: `/order/create`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: [\"orders\"]\n    }),\n    updateOrder: build.mutation({\n      query: body => ({\n        url: `/order/update`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: [\"orders\", \"order\"]\n    }),\n    checkFile: build.mutation({\n      query: body => ({\n        url: `/file/upload`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    getMyOrders: build.query({\n      query: _ref2 => {\n        let {\n          filter,\n          page\n        } = _ref2;\n        return {\n          url: `/order/my?filter=${filter}&page=${page}`,\n          method: \"GET\"\n        };\n      },\n      providesTags: () => [\"orders\"]\n    }),\n    pickExecutor: build.mutation({\n      query: body => ({\n        url: `customer/pick`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    unpickExecutor: build.mutation({\n      query: body => ({\n        url: `/customer/unpick`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    declineOrder: build.mutation({\n      query: body => ({\n        url: `/executor/decline`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    doneExecutor: build.mutation({\n      query: body => ({\n        url: `/executor/done`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    }),\n    customerApprove: build.mutation({\n      query: body => ({\n        url: `/customer/approve`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"]\n    })\n  })\n});","map":{"version":3,"names":["createApi","baseQuery","flightApi","reducerPath","tagTypes","endpoints","build","getFlights","query","url","method","getSpecializations","getOrders","_ref","page","seacrh","filter","providesTags","getOrder","id","сreateResponse","mutation","body","invalidatesTags","archiveOrder","activeOrder","createOrder","updateOrder","checkFile","getMyOrders","_ref2","pickExecutor","unpickExecutor","declineOrder","doneExecutor","customerApprove"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/services/flightService.ts"],"sourcesContent":["import { createApi } from \"@reduxjs/toolkit/query/react\";\nimport { baseQuery } from \"./settings\";\nimport {\n  getSpecializationsData,\n  getOrdersData,\n  getOrderData,\n  createResponseProps,\n  archiveOrder,\n} from \"../types/casesTypes\";\n\nexport const flightApi = createApi({\n  reducerPath: \"casesApi\",\n  baseQuery,\n  tagTypes: [\"orders\", \"order\"],\n  endpoints: (build) => ({\n    getFlights: build.query<getSpecializationsData, void>({\n      query: () => ({\n        url: `/api/flight/?arrivalPoint=<Куда>&departurePoint=<Откуда>&date=<01.01.2000>\n        `,\n        method: \"GET\",\n      }),\n    }),\n\n    /////\n\n    getSpecializations: build.query<getSpecializationsData, void>({\n      query: () => ({\n        url: `/specialization/`,\n        method: \"GET\",\n      }),\n    }),\n    getOrders: build.query<\n      { orders: getOrdersData[]; count: number },\n      { page: number; seacrh: string | null; filter: string | null }\n    >({\n      query: ({ page, seacrh, filter }) => {\n        return {\n          url: `/order/?page=${page}${seacrh ? \"&search=\" + seacrh : \"\"}${\n            filter ? \"&filter=\" + filter : \"\"\n          }`,\n          method: \"GET\",\n        };\n      },\n      providesTags: () => [\"orders\"],\n    }),\n    getOrder: build.query<getOrderData, string>({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"order\"],\n    }),\n    сreateResponse: build.mutation<getOrderData, createResponseProps>({\n      query: (body) => ({\n        url: `/executor/response`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    archiveOrder: build.mutation<any, archiveOrder>({\n      query: (body) => ({\n        url: `/order/archive`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    activeOrder: build.mutation<any, archiveOrder>({\n      query: (body) => ({\n        url: `/order/active`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    createOrder: build.mutation<any, any>({\n      query: (body) => ({\n        url: `/order/create`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: [\"orders\"],\n    }),\n    updateOrder: build.mutation<any, any>({\n      query: (body) => ({\n        url: `/order/update`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: [\"orders\", \"order\"],\n    }),\n    checkFile: build.mutation<{ files: string[] }, any>({\n      query: (body) => ({\n        url: `/file/upload`,\n        method: \"POST\",\n        body: body,\n      }),\n\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    getMyOrders: build.query<\n      { count: number; orders: getOrdersData[] },\n      { filter: string; page: number }\n    >({\n      query: ({ filter, page }) => ({\n        url: `/order/my?filter=${filter}&page=${page}`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"orders\"],\n    }),\n    pickExecutor: build.mutation<\n      any,\n      {\n        orderId: string;\n        responseId: string;\n      }\n    >({\n      query: (body) => ({\n        url: `customer/pick`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    unpickExecutor: build.mutation<\n      any,\n      {\n        orderId: string;\n        responseId: string;\n      }\n    >({\n      query: (body) => ({\n        url: `/customer/unpick`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    declineOrder: build.mutation<\n      any,\n      {\n        orderId: string;\n      }\n    >({\n      query: (body) => ({\n        url: `/executor/decline`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    doneExecutor: build.mutation<\n      any,\n      {\n        orderId: string;\n        comment: string;\n        rating: number;\n      }\n    >({\n      query: (body) => ({\n        url: `/executor/done`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n    customerApprove: build.mutation<\n      any,\n      {\n        orderId: string;\n        comment: string;\n        rating: number;\n        cost: number | null;\n      }\n    >({\n      query: (body) => ({\n        url: `/customer/approve`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"orders\", \"order\"],\n    }),\n  }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}