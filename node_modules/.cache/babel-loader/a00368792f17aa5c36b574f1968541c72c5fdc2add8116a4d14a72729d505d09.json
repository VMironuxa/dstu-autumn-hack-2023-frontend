{"ast":null,"code":"import { createApi } from '@reduxjs/toolkit/query/react';\nimport { baseQuery } from './settings';\nexport const userApi = createApi({\n  reducerPath: 'userApi',\n  tagTypes: ['balance', 'inventory', 'details', 'price'],\n  baseQuery,\n  endpoints: build => ({\n    getBalance: build.query({\n      query: () => ({\n        url: `profile/balance`,\n        method: 'GET'\n      }),\n      providesTags: () => ['balance']\n    }),\n    getInventory: build.query({\n      query: _ref => {\n        let {\n          page,\n          count\n        } = _ref;\n        return {\n          url: 'profile/inventory',\n          method: 'GET',\n          params: {\n            page,\n            count\n          }\n        };\n      },\n      providesTags: () => ['inventory']\n    }),\n    getDetails: build.query({\n      query: _ref2 => {\n        let {\n          page,\n          count,\n          sort\n        } = _ref2;\n        return {\n          url: `profile/details`,\n          method: 'GET',\n          params: {\n            page,\n            count,\n            sort\n          }\n        };\n      },\n      providesTags: () => ['details']\n    }),\n    getPriceProduct: build.query({\n      query: _ref3 => {\n        let {\n          id,\n          amount\n        } = _ref3;\n        return {\n          url: `store/price`,\n          method: 'GET',\n          params: {\n            id,\n            amount\n          }\n        };\n      },\n      providesTags: () => ['price']\n    }),\n    getPriceCurrency: build.query({\n      query: _ref4 => {\n        let {\n          id,\n          amount,\n          rubs,\n          isPack\n        } = _ref4;\n        return {\n          url: `store/currency/`,\n          method: 'GET',\n          params: {\n            id,\n            amount,\n            rubs,\n            isPack\n          }\n        };\n      },\n      providesTags: () => ['price']\n    }),\n    buyProduct: build.mutation({\n      query: body => ({\n        url: `store/buy`,\n        method: 'POST',\n        body: body\n      }),\n      invalidatesTags: ['balance', 'inventory', 'details']\n    }),\n    refill: build.mutation({\n      query: amount => ({\n        url: `store/refill/${amount}`,\n        method: 'POST'\n      }),\n      invalidatesTags: ['balance', 'inventory', 'details']\n    }),\n    refundProduct: build.mutation({\n      query: id => ({\n        url: `/profile/refund/${id}`,\n        method: 'PUT'\n      }),\n      invalidatesTags: ['balance', 'inventory', 'details']\n    }),\n    getCode: build.query({\n      query: () => ({\n        url: `notification`,\n        method: 'GET'\n      })\n    }),\n    getContactsForNotices: build.query({\n      query: () => ({\n        url: `contacts`,\n        method: 'GET'\n      })\n    }),\n    activateService: build.mutation({\n      query: _ref5 => {\n        let {\n          id,\n          serverId\n        } = _ref5;\n        return {\n          url: `/profile/updateServer/`,\n          params: {\n            id,\n            serverId\n          },\n          method: 'PUT'\n        };\n      },\n      invalidatesTags: ['balance', 'inventory', 'details']\n    })\n  })\n});","map":{"version":3,"names":["createApi","baseQuery","userApi","reducerPath","tagTypes","endpoints","build","getBalance","query","url","method","providesTags","getInventory","_ref","page","count","params","getDetails","_ref2","sort","getPriceProduct","_ref3","id","amount","getPriceCurrency","_ref4","rubs","isPack","buyProduct","mutation","body","invalidatesTags","refill","refundProduct","getCode","getContactsForNotices","activateService","_ref5","serverId"],"sources":["/Users/mironuxa/Documents/GitHub/magicow-shop-front/src/services/userServices.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nimport { baseQuery } from './settings';\nimport {\n  getBalanceData,\n  getDetailsData,\n  getInventoryData,\n  buyProductParams,\n  getDetailsParams,\n  getInventoryParams,\n  Refill,\n  RefillProps,\n  getPriceProductParams,\n  getPriceCurrencyData,\n  getPriceCurrencyParams,\n  IGetCode,\n  activateServiceParams,\n  Contact,\n} from '../types/userTypes';\n\nexport const userApi = createApi({\n  reducerPath: 'userApi',\n  tagTypes: ['balance', 'inventory', 'details', 'price'],\n  baseQuery,\n  endpoints: build => ({\n    getBalance: build.query<getBalanceData, void>({\n      query: () => ({\n        url: `profile/balance`,\n        method: 'GET',\n      }),\n      providesTags: () => ['balance'],\n    }),\n    getInventory: build.query<getInventoryData, getInventoryParams>({\n      query: ({ page, count }) => ({\n        url: 'profile/inventory',\n        method: 'GET',\n        params: {\n          page,\n          count,\n        },\n      }),\n      providesTags: () => ['inventory'],\n    }),\n    getDetails: build.query<getDetailsData, getDetailsParams>({\n      query: ({ page, count, sort }) => ({\n        url: `profile/details`,\n        method: 'GET',\n        params: {\n          page,\n          count,\n          sort,\n        },\n      }),\n      providesTags: () => ['details'],\n    }),\n    getPriceProduct: build.query<number, getPriceProductParams>({\n      query: ({ id, amount }) => ({\n        url: `store/price`,\n        method: 'GET',\n        params: {\n          id,\n          amount,\n        },\n      }),\n      providesTags: () => ['price'],\n    }),\n    getPriceCurrency: build.query<getPriceCurrencyData, getPriceCurrencyParams>({\n      query: ({ id, amount, rubs, isPack }) => ({\n        url: `store/currency/`,\n        method: 'GET',\n        params: {\n          id,\n          amount,\n          rubs,\n          isPack,\n        },\n      }),\n      providesTags: () => ['price'],\n    }),\n    buyProduct: build.mutation<{ data: any }, buyProductParams>({\n      query: (body: buyProductParams) => ({\n        url: `store/buy`,\n        method: 'POST',\n        body: body,\n      }),\n      invalidatesTags: ['balance', 'inventory', 'details'],\n    }),\n    refill: build.mutation<Refill, number>({\n      query: amount => ({\n        url: `store/refill/${amount}`,\n        method: 'POST',\n      }),\n      invalidatesTags: ['balance', 'inventory', 'details'],\n    }),\n    refundProduct: build.mutation<{ data: any }, string | number>({\n      query: (id: string | number) => ({\n        url: `/profile/refund/${id}`,\n        method: 'PUT',\n      }),\n      invalidatesTags: ['balance', 'inventory', 'details'],\n    }),\n    getCode: build.query<IGetCode, void>({\n      query: () => ({\n        url: `notification`,\n        method: 'GET',\n      }),\n    }),\n    getContactsForNotices: build.query<Contact[], void>({\n      query: () => ({\n        url: `contacts`,\n        method: 'GET',\n      }),\n    }),\n    activateService: build.mutation<{ data: any }, activateServiceParams>({\n      query: ({ id, serverId }) => ({\n        url: `/profile/updateServer/`,\n        params: {\n          id,\n          serverId,\n        },\n        method: 'PUT',\n      }),\n      invalidatesTags: ['balance', 'inventory', 'details'],\n    }),\n  }),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}