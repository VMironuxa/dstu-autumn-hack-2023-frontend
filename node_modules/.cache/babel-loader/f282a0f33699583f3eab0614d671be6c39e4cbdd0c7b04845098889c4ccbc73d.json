{"ast":null,"code":"var _jsxFileName = \"/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Modals/DoneModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport { Formik } from \"formik\";\nimport CustomSelect from \"../UI/CustomSelect\";\nimport { casesApi } from \"../../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoneModal = _ref => {\n  _s();\n  let {\n    isActive,\n    setIsActive,\n    isExecutor = true,\n    info = null,\n    orderId\n  } = _ref;\n  const [done] = casesApi.useDoneExecutorMutation();\n  const [approve] = casesApi.useCustomerApproveMutation();\n  const select_cost_type = [{\n    value: \"1\",\n    label: \"1\"\n  }, {\n    value: \"2\",\n    label: \"2\"\n  }, {\n    value: \"3\",\n    label: \"3\"\n  }, {\n    value: \"4\",\n    label: \"4\"\n  }, {\n    value: \"5\",\n    label: \"5\"\n  }];\n  const [rating, setRating] = useState(select_cost_type[select_cost_type.length - 1]);\n  const [description, setDescription] = useState(info === null ? \"\" : info.description);\n\n  // if (isLoading) return <Loader />;\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isActive: isActive,\n    setIsActive: setIsActive,\n    headerTitle: \"Подтвердите успешное выполнение заказа\",\n    className: \"monitoringModal\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monitoringModalContainer\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            cost: 0\n          }\n          // validate={(values) => {\n          //   const errors = {};\n          //   if (!values.name) {\n          //     //@ts-ignore\n          //     errors.name = \"Заполните имя\";\n          //   }\n          //   if (!/^([А-Я]|[а-я]|\\s|,|[A-Z]|[a-z]){0,30}$/.test(values.tags)) {\n          //     //@ts-ignore\n          //     errors.name =\n          //       \"Для создания тегов используйте русские и латинские буквы, а также запятую\";\n          //   }\n          //   console.log(\"errors\", errors);\n          //   return errors;\n          // }}\n          ,\n          onSubmit: (values, _ref2) => {\n            let {\n              setSubmitting\n            } = _ref2;\n            isExecutor ? done({\n              orderId: String(orderId),\n              comment: description,\n              rating: Number(rating.value)\n            }) : approve({\n              orderId: String(orderId),\n              comment: description,\n              rating: Number(rating.value)\n            });\n            setIsActive(false);\n          },\n          children: _ref3 => {\n            let {\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting\n              /* and other goodies */\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"box-form-create-case-modal\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"\\u041A\\u041E\\u041C\\u041C\\u0415\\u041D\\u0422\\u0410\\u0420\\u0418\\u0419\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    name: \"description\",\n                    id: \"description\",\n                    rows: 4,\n                    className: \"textarea-description\",\n                    onChange: e => setDescription(e.target.value),\n                    value: description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\u041E\\u0426\\u0415\\u041D\\u041A\\u0410 \", isExecutor ? \"ЗАКАЗЧИКА\" : \"ИСПОЛНИТЕЛЯ\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    value: rating,\n                    options: select_cost_type,\n                    onChange: setRating,\n                    isHaveIcon: false,\n                    width: \"100%\",\n                    heightSelect: 45,\n                    paddingIndicator: 0,\n                    paddingContainer: 12,\n                    backgroundColor: \"#171226\",\n                    menuPlacement: \"bottom\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"\\u0421\\u0422\\u041E\\u0418\\u041C\\u041E\\u0421\\u0422\\u042C \\u0417\\u0410\\u041A\\u0410\\u0417\\u0410\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"string\",\n                    name: \"cost\",\n                    className: \"input\",\n                    onChange: handleChange,\n                    value: values.cost\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\"\n                  // disabled={isSubmitting}\n                  ,\n                  className: \"lightBtn btn\",\n                  children: \"\\u041F\\u041E\\u0414\\u0422\\u0412\\u0415\\u0420\\u0414\\u0418\\u0422\\u042C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DoneModal, \"7KbCv+Z8d0RReDgLl8M1oZWG8i4=\", false, function () {\n  return [casesApi.useDoneExecutorMutation, casesApi.useCustomerApproveMutation];\n});\n_c = DoneModal;\nexport default DoneModal;\nvar _c;\n$RefreshReg$(_c, \"DoneModal\");","map":{"version":3,"names":["React","useState","Modal","Formik","CustomSelect","casesApi","jsxDEV","_jsxDEV","Fragment","_Fragment","DoneModal","_ref","_s","isActive","setIsActive","isExecutor","info","orderId","done","useDoneExecutorMutation","approve","useCustomerApproveMutation","select_cost_type","value","label","rating","setRating","length","description","setDescription","headerTitle","className","children","initialValues","cost","onSubmit","values","_ref2","setSubmitting","String","comment","Number","_ref3","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","name","id","rows","onChange","e","target","options","isHaveIcon","width","heightSelect","paddingIndicator","paddingContainer","backgroundColor","menuPlacement","type","_c","$RefreshReg$"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Modals/DoneModal.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport { topUpMonitoringServers } from \"../../consts/modal\";\nimport { Formik, Field, useFormik, FormikProvider } from \"formik\";\n\nimport CustomSelect from \"../UI/CustomSelect\";\nimport Loader from \"../Loader\";\nimport { casesApi } from \"../../store\";\n\ninterface MonitoringModalProps {\n  isActive: boolean;\n  setIsActive: (param: boolean) => void;\n  isExecutor?: boolean;\n  info?: any;\n  children?: React.ReactNode;\n  orderId?: string;\n}\n\nconst DoneModal = ({\n  isActive,\n  setIsActive,\n  isExecutor = true,\n  info = null,\n  orderId,\n}: MonitoringModalProps) => {\n  const [done] = casesApi.useDoneExecutorMutation();\n  const [approve] = casesApi.useCustomerApproveMutation();\n\n  const select_cost_type = [\n    {\n      value: \"1\",\n      label: \"1\",\n    },\n    {\n      value: \"2\",\n      label: \"2\",\n    },\n    {\n      value: \"3\",\n      label: \"3\",\n    },\n    {\n      value: \"4\",\n      label: \"4\",\n    },\n    {\n      value: \"5\",\n      label: \"5\",\n    },\n  ];\n  const [rating, setRating] = useState(\n    select_cost_type[select_cost_type.length - 1]\n  );\n\n  const [description, setDescription] = useState(\n    info === null ? \"\" : info.description\n  );\n\n  // if (isLoading) return <Loader />;\n\n  return (\n    <Modal\n      isActive={isActive}\n      setIsActive={setIsActive}\n      headerTitle={\"Подтвердите успешное выполнение заказа\"}\n      className=\"monitoringModal\"\n    >\n      <>\n        <div className=\"monitoringModalContainer\">\n          <Formik\n            initialValues={{ cost: 0 }}\n            // validate={(values) => {\n            //   const errors = {};\n            //   if (!values.name) {\n            //     //@ts-ignore\n            //     errors.name = \"Заполните имя\";\n            //   }\n            //   if (!/^([А-Я]|[а-я]|\\s|,|[A-Z]|[a-z]){0,30}$/.test(values.tags)) {\n            //     //@ts-ignore\n            //     errors.name =\n            //       \"Для создания тегов используйте русские и латинские буквы, а также запятую\";\n            //   }\n            //   console.log(\"errors\", errors);\n            //   return errors;\n            // }}\n            onSubmit={(values, { setSubmitting }) => {\n              isExecutor\n                ? done({\n                    orderId: String(orderId),\n                    comment: description,\n                    rating: Number(rating.value),\n                  })\n                : approve({\n                    orderId: String(orderId),\n                    comment: description,\n                    rating: Number(rating.value),\n                  });\n              setIsActive(false);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              /* and other goodies */\n            }) => (\n              <form\n                onSubmit={handleSubmit}\n                className=\"box-form-create-case-modal\"\n              >\n                <>\n                  <div>\n                    <p>КОММЕНТАРИЙ</p>\n                    <textarea\n                      name={\"description\"}\n                      id=\"description\"\n                      rows={4}\n                      className=\"textarea-description\"\n                      onChange={(e) => setDescription(e.target.value)}\n                      value={description}\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <p>ОЦЕНКА {isExecutor ? \"ЗАКАЗЧИКА\" : \"ИСПОЛНИТЕЛЯ\"}</p>\n\n                    <CustomSelect\n                      value={rating}\n                      options={select_cost_type}\n                      onChange={setRating}\n                      isHaveIcon={false}\n                      width={\"100%\"}\n                      heightSelect={45}\n                      paddingIndicator={0}\n                      paddingContainer={12}\n                      backgroundColor={\"#171226\"}\n                      menuPlacement={\"bottom\"}\n                    />\n                  </div>\n\n                  <div>\n                    <p>СТОИМОСТЬ ЗАКАЗА</p>\n                    <input\n                      type=\"string\"\n                      name=\"cost\"\n                      className=\"input\"\n                      onChange={handleChange}\n                      value={values.cost}\n                    />\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    // disabled={isSubmitting}\n                    className=\"lightBtn btn\"\n                  >\n                    ПОДТВЕРДИТЬ\n                  </button>\n                  {/* {errors.name && touched.name && errors.name} */}\n                </>\n              </form>\n            )}\n          </Formik>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default DoneModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}