{"ast":null,"code":"var _jsxFileName = \"/Users/mironuxa/Documents/GitHub/magicow-shop-front/src/components/Shop/Modals/TopUp/TopUpModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../../../assets/scss/components/shop/modals/top-up/_top-up-modal.scss';\nimport ruble from '../../../../assets/img/Ruble.svg';\nimport { useBodyScrollModal } from '../../../../hooks/useBodyScrollModal';\nimport Input from '../../../UI/Input';\nimport TopUpItem from './TopUpItem';\nimport svg from '../../../../assets/img/SBP.svg';\nimport ProgressBar from '../../../Modals/ProgressBar';\nimport BottomSide from './BottomSide';\nimport { userApi } from '../../../../store';\nimport Modal from '../../../UI/Modal';\nimport { useLang } from '../../../../hooks/useLang';\nimport { topUpModalEnterTheAmount, topUpModalInputAmount, topUpModalTitle, topUpModalTopUpBtn } from '../../../../consts/modal';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst item = [{\n  count: 50,\n  procent: 15\n}, {\n  count: 150,\n  procent: 15\n}, {\n  count: 500,\n  procent: 15\n}, {\n  count: 750,\n  procent: 15\n}];\nconst data = [{\n  img: svg,\n  topTitle: 'Gamemoney',\n  bottomTitle: 'Банковская карта',\n  percentages: 12\n}, {\n  img: svg,\n  topTitle: 'Gamemoney',\n  bottomTitle: 'Банковская карта',\n  percentages: 18\n}, {\n  img: svg,\n  topTitle: 'Gamemoney',\n  bottomTitle: 'Банковская карта',\n  percentages: 15\n}, {\n  img: svg,\n  topTitle: 'Gamemoney',\n  bottomTitle: 'Банковская карта',\n  percentages: 16\n}, {\n  img: svg,\n  topTitle: 'Gamemoney',\n  bottomTitle: 'Банковская карта',\n  percentages: 8\n}];\nconst selectItems = ['Все', 'Деньги', 'Скины', 'Крипта'];\nconst TopUpModal = _ref => {\n  _s();\n  let {\n    setIsActive\n  } = _ref;\n  const [refillFunc] = userApi.useRefillMutation();\n  const [activeSelect, setActiveSelect] = useState(0);\n  const [amountInput, setAmountInput] = useState('');\n  const [promoInput, setPromoInput] = useState('');\n  const [activePayments, setActivePayments] = useState(0);\n  const [currentPercentages, setCurrentPercentages] = useState(0);\n  useBodyScrollModal();\n  const [id, setId] = useState(localStorage.getItem('activeServer') != null ? Number(localStorage.getItem('activeServer')) : null);\n  useEffect(() => {\n    localStorage.setItem('activeServer', JSON.stringify(id));\n  }, [id]);\n  const handlerButton = async () => {\n    if (amountInput && +amountInput > 0) {\n      await refillFunc(+amountInput).unwrap();\n      setIsActive(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    headerTitle: useLang(topUpModalTitle),\n    setIsActive: setIsActive,\n    isSelect: true,\n    modalHeaderBottom: 20,\n    className: \"topUp\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payments\",\n        children: [...data, ...data].map((el, index) => /*#__PURE__*/_createElement(TopUpItem, {\n          setCurrentPercentages: setCurrentPercentages,\n          activePayments: activePayments,\n          setActivePayments: setActivePayments,\n          index: index,\n          ...el,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canBeTranslatedInputItem inputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb12\",\n            children: useLang(topUpModalEnterTheAmount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            svgIcon: ruble,\n            isNumber: true,\n            value: amountInput,\n            setValue: setAmountInput,\n            placeholder: useLang(topUpModalInputAmount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progressBar\",\n          children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n            item: item,\n            activeValue: amountInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomSide, {\n          amountInput: amountInput,\n          percentages: currentPercentages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlerButton,\n          className: \"btn greenBtn wideBtn\",\n          children: useLang(topUpModalTopUpBtn)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(TopUpModal, \"JXgiGB/Fk9LGe59PWXwDfE8LIvU=\", false, function () {\n  return [userApi.useRefillMutation, useBodyScrollModal, useLang, useLang, useLang, useLang];\n});\n_c = TopUpModal;\nexport default TopUpModal;\nvar _c;\n$RefreshReg$(_c, \"TopUpModal\");","map":{"version":3,"names":["React","useState","useEffect","ruble","useBodyScrollModal","Input","TopUpItem","svg","ProgressBar","BottomSide","userApi","Modal","useLang","topUpModalEnterTheAmount","topUpModalInputAmount","topUpModalTitle","topUpModalTopUpBtn","createElement","_createElement","jsxDEV","_jsxDEV","Fragment","_Fragment","item","count","procent","data","img","topTitle","bottomTitle","percentages","selectItems","TopUpModal","_ref","_s","setIsActive","refillFunc","useRefillMutation","activeSelect","setActiveSelect","amountInput","setAmountInput","promoInput","setPromoInput","activePayments","setActivePayments","currentPercentages","setCurrentPercentages","id","setId","localStorage","getItem","Number","setItem","JSON","stringify","handlerButton","unwrap","headerTitle","isSelect","modalHeaderBottom","className","children","map","el","index","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","svgIcon","isNumber","value","setValue","placeholder","activeValue","onClick","_c","$RefreshReg$"],"sources":["/Users/mironuxa/Documents/GitHub/magicow-shop-front/src/components/Shop/Modals/TopUp/TopUpModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../../../assets/scss/components/shop/modals/top-up/_top-up-modal.scss';\nimport ruble from '../../../../assets/img/Ruble.svg';\nimport { ReactComponent as CloseIcon } from '../../../../assets/img/modal/CloseIcon.svg';\nimport { useBodyScrollModal } from '../../../../hooks/useBodyScrollModal';\nimport Input from '../../../UI/Input';\nimport TopUpItem from './TopUpItem';\nimport svg from '../../../../assets/img/SBP.svg';\nimport ProgressBar from '../../../Modals/ProgressBar';\nimport BottomSide from './BottomSide';\nimport { RefillProps } from '../../../../types/userTypes';\nimport { userApi } from '../../../../store';\nimport Modal from '../../../UI/Modal';\nimport { useLang } from '../../../../hooks/useLang';\nimport {\n  topUpModalEnterTheAmount,\n  topUpModalInputAmount,\n  topUpModalTitle,\n  topUpModalTopUpBtn,\n} from '../../../../consts/modal';\n\ninterface TopUpModalProps {\n  setIsActive: (param: boolean) => void;\n}\n\nconst item = [\n  {\n    count: 50,\n    procent: 15,\n  },\n  {\n    count: 150,\n    procent: 15,\n  },\n  {\n    count: 500,\n    procent: 15,\n  },\n  {\n    count: 750,\n    procent: 15,\n  },\n];\n\nconst data = [\n  {\n    img: svg,\n    topTitle: 'Gamemoney',\n    bottomTitle: 'Банковская карта',\n    percentages: 12,\n  },\n  {\n    img: svg,\n    topTitle: 'Gamemoney',\n    bottomTitle: 'Банковская карта',\n    percentages: 18,\n  },\n  {\n    img: svg,\n    topTitle: 'Gamemoney',\n    bottomTitle: 'Банковская карта',\n    percentages: 15,\n  },\n  {\n    img: svg,\n    topTitle: 'Gamemoney',\n    bottomTitle: 'Банковская карта',\n    percentages: 16,\n  },\n  {\n    img: svg,\n    topTitle: 'Gamemoney',\n    bottomTitle: 'Банковская карта',\n    percentages: 8,\n  },\n];\n\nconst selectItems = ['Все', 'Деньги', 'Скины', 'Крипта'];\n\nconst TopUpModal = ({ setIsActive }: TopUpModalProps) => {\n  const [refillFunc] = userApi.useRefillMutation();\n\n  const [activeSelect, setActiveSelect] = useState(0);\n  const [amountInput, setAmountInput] = useState('');\n  const [promoInput, setPromoInput] = useState('');\n  const [activePayments, setActivePayments] = useState(0);\n  const [currentPercentages, setCurrentPercentages] = useState(0);\n\n  useBodyScrollModal();\n\n  const [id, setId] = useState<number | null>(\n    localStorage.getItem('activeServer') != null ? Number(localStorage.getItem('activeServer')) : null,\n  );\n\n  useEffect(() => {\n    localStorage.setItem('activeServer', JSON.stringify(id));\n  }, [id]);\n\n  const handlerButton = async () => {\n    if (amountInput && +amountInput > 0) {\n      await refillFunc(+amountInput).unwrap();\n      setIsActive(false);\n    }\n  };\n  return (\n    <Modal\n      headerTitle={useLang(topUpModalTitle)}\n      setIsActive={setIsActive}\n      isSelect\n      modalHeaderBottom={20}\n      className=\"topUp\"\n    >\n      <>\n        {/* нужный кусок\n        <div className=\"select\">\n              {selectItems.map((el, index) => (\n                <div\n                  onClick={() => setActiveSelect(index)}\n                  className={`selectItem ${activeSelect === index ? 'selectItemActive' : ''}`}\n                  key={index}\n                >\n                  {el}\n                </div>\n              ))}\n            </div> */}\n        <div className=\"payments\">\n          {[...data, ...data].map((el, index) => (\n            <TopUpItem\n              setCurrentPercentages={setCurrentPercentages}\n              activePayments={activePayments}\n              setActivePayments={setActivePayments}\n              index={index}\n              {...el}\n              key={index}\n            />\n          ))}\n        </div>\n        <div>\n          <div className=\"canBeTranslatedInputItem inputBlock\">\n            <h4 className=\"mb12\">{useLang(topUpModalEnterTheAmount)}</h4>\n            <Input\n              svgIcon={ruble}\n              isNumber\n              value={amountInput}\n              setValue={setAmountInput}\n              placeholder={useLang(topUpModalInputAmount)}\n            />\n          </div>\n          <div className=\"progressBar\">\n            <ProgressBar item={item} activeValue={amountInput} />\n          </div>\n          {/* нужный кусок\n           <div className=\"canBeTranslatedInputItem inputBlock mobile-dn\">\n              <div className=\"flex jc mb12\">\n                <h4>Промокод</h4>\n                <div className=\"flex\">\n                  <h4>Бонус</h4>\n                  <div className=\"bonus\">\n                    <div>+ 0%</div>\n                  </div>\n                </div>\n              </div> */}\n          {/* нужный кусок \n          <div className=\"promo\">\n              <Input svgIcon={ruble} value={promoInput} setValue={setPromoInput} placeholder=\"Введите промокод\" />\n              <button className=\"btn blackBtn wideBtn\">Применить</button>\n            </div> */}\n          <BottomSide amountInput={amountInput} percentages={currentPercentages} />\n          <button onClick={handlerButton} className=\"btn greenBtn wideBtn\">\n            {useLang(topUpModalTopUpBtn)}\n          </button>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default TopUpModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}