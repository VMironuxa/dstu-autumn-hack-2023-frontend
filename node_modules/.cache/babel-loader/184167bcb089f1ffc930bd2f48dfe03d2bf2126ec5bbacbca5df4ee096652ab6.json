{"ast":null,"code":"import { createApi } from \"@reduxjs/toolkit/query/react\";\nimport { baseQuery } from \"./settings\";\nexport const casesApi = createApi({\n  reducerPath: \"casesApi\",\n  baseQuery,\n  tagTypes: [\"orders\", \"order\"],\n  endpoints: build => ({\n    getSpecializations: build.query({\n      query: () => ({\n        url: `/specialization/`,\n        method: \"GET\"\n      })\n    }),\n    getOrders: build.query({\n      query: id => ({\n        url: `/order/?page=${id}`,\n        method: \"GET\"\n      }),\n      providesTags: () => [\"orders\"]\n    }),\n    getOrder: build.query({\n      query: id => ({\n        url: `/order/${id}`,\n        method: \"GET\"\n      }),\n      providesTags: () => [\"order\"]\n    }),\n    сreateResponse: build.query({\n      query: body => ({\n        url: `/executor/respose`,\n        method: \"POST\",\n        body: body\n      }),\n      providesTags: () => [\"orders\", \"order\"]\n    }),\n    createOrder: build.mutation({\n      query: body => ({\n        url: `/order/create`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: [\"orders\"]\n    })\n  })\n});","map":{"version":3,"names":["createApi","baseQuery","casesApi","reducerPath","tagTypes","endpoints","build","getSpecializations","query","url","method","getOrders","id","providesTags","getOrder","сreateResponse","body","createOrder","mutation","invalidatesTags"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/services/casesService.ts"],"sourcesContent":["import { createApi } from \"@reduxjs/toolkit/query/react\";\nimport { baseQuery } from \"./settings\";\nimport {\n  getSpecializationsData,\n  getOrdersData,\n  getOrderData,\n  createResponseProps,\n} from \"../types/casesTypes\";\n\nexport const casesApi = createApi({\n  reducerPath: \"casesApi\",\n  baseQuery,\n  tagTypes: [\"orders\", \"order\"],\n  endpoints: (build) => ({\n    getSpecializations: build.query<getSpecializationsData, void>({\n      query: () => ({\n        url: `/specialization/`,\n        method: \"GET\",\n      }),\n    }),\n    getOrders: build.query<{ orders: getOrdersData[]; count: number }, number>({\n      query: (id) => ({\n        url: `/order/?page=${id}`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"orders\"],\n    }),\n    getOrder: build.query<getOrderData, string>({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"order\"],\n    }),\n    сreateResponse: build.query<getOrderData, createResponseProps>({\n      query: (body) => ({\n        url: `/executor/respose`,\n        method: \"POST\",\n        body: body,\n      }),\n      providesTags: () => [\"orders\", \"order\"],\n    }),\n    createOrder: build.mutation<any, any>({\n      query: (body) => ({\n        url: `/order/create`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: [\"orders\"],\n    }),\n  }),\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,8BAA8B;AACxD,SAASC,SAAS,QAAQ,YAAY;AAQtC,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,UAAU;EACvBF,SAAS;EACTG,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;EAC7BC,SAAS,EAAGC,KAAK,KAAM;IACrBC,kBAAkB,EAAED,KAAK,CAACE,KAAK,CAA+B;MAC5DA,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAG,kBAAiB;QACvBC,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACFC,SAAS,EAAEL,KAAK,CAACE,KAAK,CAAqD;MACzEA,KAAK,EAAGI,EAAE,KAAM;QACdH,GAAG,EAAG,gBAAeG,EAAG,EAAC;QACzBF,MAAM,EAAE;MACV,CAAC,CAAC;MACFG,YAAY,EAAEA,CAAA,KAAM,CAAC,QAAQ;IAC/B,CAAC,CAAC;IACFC,QAAQ,EAAER,KAAK,CAACE,KAAK,CAAuB;MAC1CA,KAAK,EAAGI,EAAE,KAAM;QACdH,GAAG,EAAG,UAASG,EAAG,EAAC;QACnBF,MAAM,EAAE;MACV,CAAC,CAAC;MACFG,YAAY,EAAEA,CAAA,KAAM,CAAC,OAAO;IAC9B,CAAC,CAAC;IACFE,cAAc,EAAET,KAAK,CAACE,KAAK,CAAoC;MAC7DA,KAAK,EAAGQ,IAAI,KAAM;QAChBP,GAAG,EAAG,mBAAkB;QACxBC,MAAM,EAAE,MAAM;QACdM,IAAI,EAAEA;MACR,CAAC,CAAC;MACFH,YAAY,EAAEA,CAAA,KAAM,CAAC,QAAQ,EAAE,OAAO;IACxC,CAAC,CAAC;IACFI,WAAW,EAAEX,KAAK,CAACY,QAAQ,CAAW;MACpCV,KAAK,EAAGQ,IAAI,KAAM;QAChBP,GAAG,EAAG,eAAc;QACpBC,MAAM,EAAE,MAAM;QACdM,IAAI,EAAEA;MACR,CAAC,CAAC;MACFG,eAAe,EAAE,CAAC,QAAQ;IAC5B,CAAC;EACH,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}