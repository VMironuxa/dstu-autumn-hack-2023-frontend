{"ast":null,"code":"export const getArrayFromDigit = function (digit, currentPage, valueInPage) {\n  let functional = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'table';\n  const res = [];\n  if (digit <= valueInPage || functional === 'table') {\n    for (let i = 1; i <= digit; i++) res.push(i);\n  } else {\n    if (currentPage === 1 || currentPage < valueInPage - 2) {\n      for (let i = 1; i <= valueInPage - 1; i++) res.push(i);\n      res.push(digit);\n    } else if (currentPage === digit || currentPage > digit - valueInPage + 2) {\n      res.push(1);\n      for (let i = digit - valueInPage + 2; i <= digit; i++) res.push(i);\n    } else {\n      let limit = digit;\n      if (currentPage + (valueInPage - 3) < digit) {\n        limit = currentPage + (valueInPage - 3);\n      }\n      if (currentPage - 1 != 1) {\n        res.push(1);\n      }\n      for (let i = currentPage - 1; i <= limit - 1; i++) res.push(i);\n      if (limit != digit) {\n        res.push(digit);\n      }\n    }\n  }\n  return res;\n};","map":{"version":3,"names":["getArrayFromDigit","digit","currentPage","valueInPage","functional","arguments","length","undefined","res","i","push","limit"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/utils/getArrayFromDigit.ts"],"sourcesContent":["export const getArrayFromDigit = (digit: number, currentPage: number, valueInPage: number, functional = 'table') => {\n  const res = [];\n  if (digit <= valueInPage || functional === 'table') {\n    for (let i = 1; i <= digit; i++) res.push(i);\n  } else {\n    if (currentPage === 1 || currentPage < valueInPage - 2) {\n      for (let i = 1; i <= valueInPage - 1; i++) res.push(i);\n      res.push(digit);\n    } else if (currentPage === digit || currentPage > digit - valueInPage + 2) {\n      res.push(1);\n      for (let i = digit - valueInPage + 2; i <= digit; i++) res.push(i);\n    } else {\n      let limit = digit;\n      if (currentPage + (valueInPage - 3) < digit) {\n        limit = currentPage + (valueInPage - 3);\n      }\n      if (currentPage - 1 != 1) {\n        res.push(1);\n      }\n      for (let i = currentPage - 1; i <= limit - 1; i++) res.push(i);\n      if (limit != digit) {\n        res.push(digit);\n      }\n    }\n  }\n  return res;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,SAAAA,CAACC,KAAa,EAAEC,WAAmB,EAAEC,WAAmB,EAA2B;EAAA,IAAzBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAO;EAC7G,MAAMG,GAAG,GAAG,EAAE;EACd,IAAIP,KAAK,IAAIE,WAAW,IAAIC,UAAU,KAAK,OAAO,EAAE;IAClD,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIR,KAAK,EAAEQ,CAAC,EAAE,EAAED,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;EAC9C,CAAC,MAAM;IACL,IAAIP,WAAW,KAAK,CAAC,IAAIA,WAAW,GAAGC,WAAW,GAAG,CAAC,EAAE;MACtD,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,WAAW,GAAG,CAAC,EAAEM,CAAC,EAAE,EAAED,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;MACtDD,GAAG,CAACE,IAAI,CAACT,KAAK,CAAC;IACjB,CAAC,MAAM,IAAIC,WAAW,KAAKD,KAAK,IAAIC,WAAW,GAAGD,KAAK,GAAGE,WAAW,GAAG,CAAC,EAAE;MACzEK,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;MACX,KAAK,IAAID,CAAC,GAAGR,KAAK,GAAGE,WAAW,GAAG,CAAC,EAAEM,CAAC,IAAIR,KAAK,EAAEQ,CAAC,EAAE,EAAED,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;IACpE,CAAC,MAAM;MACL,IAAIE,KAAK,GAAGV,KAAK;MACjB,IAAIC,WAAW,IAAIC,WAAW,GAAG,CAAC,CAAC,GAAGF,KAAK,EAAE;QAC3CU,KAAK,GAAGT,WAAW,IAAIC,WAAW,GAAG,CAAC,CAAC;MACzC;MACA,IAAID,WAAW,GAAG,CAAC,IAAI,CAAC,EAAE;QACxBM,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;MACb;MACA,KAAK,IAAID,CAAC,GAAGP,WAAW,GAAG,CAAC,EAAEO,CAAC,IAAIE,KAAK,GAAG,CAAC,EAAEF,CAAC,EAAE,EAAED,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;MAC9D,IAAIE,KAAK,IAAIV,KAAK,EAAE;QAClBO,GAAG,CAACE,IAAI,CAACT,KAAK,CAAC;MACjB;IACF;EACF;EACA,OAAOO,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}