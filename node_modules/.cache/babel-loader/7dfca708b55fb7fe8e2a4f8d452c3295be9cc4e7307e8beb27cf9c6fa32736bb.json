{"ast":null,"code":"var _jsxFileName = \"/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Shop/Modals/NotificationModal.tsx\",\n  _s2 = $RefreshSig$();\nimport Modal from '../../UI/Modal';\nimport '../../../assets/scss/components/shop/modals/_notification-modal.scss';\nimport WarningMessage from './WarningMessage';\nimport { Link } from 'react-router-dom';\nimport { userApi } from '../../../store';\nimport { useEffect, useState } from 'react';\nimport Copy from '../../Copy';\nimport Loader from '../../Loader';\nimport UnauthorizedModal from './UnauthorizedModal';\nimport { useLang } from '../../../hooks/useLang';\nimport { notificationModalBind, notificationModalCopyTheCode, notificationModalGetCode, notificationModalOpenServers, notificationModalSubTitle, notificationModalTitle, notificationModalWarningMessage } from '../../../consts/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotificationModal = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    setIsActive\n  } = _ref;\n  const [value, setValue] = useState('');\n  const [isActiveModal, setIsActiveModal] = useState(false);\n  const [getCodeFunc, {\n    data: code,\n    isLoading: codeIsLoading,\n    isError\n  }] = userApi.useLazyGetCodeQuery();\n  const {\n    data: contacts,\n    isLoading\n  } = userApi.useGetContactsForNoticesQuery();\n  const getCodeHandler = () => getCodeFunc();\n  useEffect(() => {\n    code && setValue(code === null || code === void 0 ? void 0 : code.data);\n  }, [code]);\n  useEffect(() => {\n    isError ? setIsActiveModal(true) : setIsActiveModal(false);\n  }, [isError]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      setIsActive: setIsActive,\n      headerTitle: \"\\u0411\\u0443\\u0434\\u044C \\u0432 \\u043A\\u0443\\u0440\\u0441\\u0435 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439!\",\n      className: \"notificationModal\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      setIsActive: setIsActive,\n      headerTitle: useLang(notificationModalTitle),\n      className: \"notificationModal\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: useLang(notificationModalSubTitle)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"copyText\",\n          children: useLang(notificationModalCopyTheCode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), codeIsLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n          mt: \"-25px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this) : code ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notificationInputWrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `input notificationInput`,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Copy, {\n            className: \"notificationCopy\",\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getCodeHandler,\n          className: \"btn lightBtn codeBtn\",\n          children: useLang(notificationModalGetCode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxButtons\",\n          children: contacts === null || contacts === void 0 ? void 0 : _s(contacts.map(_s((it, index) => {\n            _s();\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: it.url,\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn blackBtn netWorkBtn\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: it.icon,\n                  alt: \"\",\n                  className: \"iconInBtn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [useLang(notificationModalBind), \" \", it.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this);\n          }, \"cg9t+uFKnhlcGWPoMfmUijp90Fw=\", false, function () {\n            return [useLang];\n          })), \"cg9t+uFKnhlcGWPoMfmUijp90Fw=\", false, function () {\n            return [useLang];\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WarningMessage, {\n          text: useLang(notificationModalWarningMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/servers\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textOpenServers\",\n            children: useLang(notificationModalOpenServers)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isError && isActiveModal && /*#__PURE__*/_jsxDEV(UnauthorizedModal, {\n      setIsActive: setIsActiveModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true);\n};\n_s2(NotificationModal, \"D7jGD0c4I/aFy0ioB4a/+PeGcoY=\", false, function () {\n  return [userApi.useLazyGetCodeQuery, userApi.useGetContactsForNoticesQuery, useLang, useLang, useLang, useLang, useLang, useLang];\n});\n_c = NotificationModal;\nexport default NotificationModal;\nvar _c;\n$RefreshReg$(_c, \"NotificationModal\");","map":{"version":3,"names":["Modal","WarningMessage","Link","userApi","useEffect","useState","Copy","Loader","UnauthorizedModal","useLang","notificationModalBind","notificationModalCopyTheCode","notificationModalGetCode","notificationModalOpenServers","notificationModalSubTitle","notificationModalTitle","notificationModalWarningMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationModal","_ref","_s2","_s","$RefreshSig$","setIsActive","value","setValue","isActiveModal","setIsActiveModal","getCodeFunc","data","code","isLoading","codeIsLoading","isError","useLazyGetCodeQuery","contacts","useGetContactsForNoticesQuery","getCodeHandler","headerTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mt","onClick","map","it","index","to","url","target","src","icon","alt","name","text","_c","$RefreshReg$"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Shop/Modals/NotificationModal.tsx"],"sourcesContent":["import { ModalProps } from '../../../types/modalTypes';\nimport Modal from '../../UI/Modal';\nimport '../../../assets/scss/components/shop/modals/_notification-modal.scss';\nimport WarningMessage from './WarningMessage';\nimport { Link } from 'react-router-dom';\nimport { userApi } from '../../../store';\nimport Input from '../../UI/Input';\nimport { useEffect, useState } from 'react';\nimport Copy from '../../Copy';\nimport Loader from '../../Loader';\nimport UnauthorizedModal from './UnauthorizedModal';\nimport { useLang } from '../../../hooks/useLang';\nimport {\n  notificationModalBind,\n  notificationModalCopyTheCode,\n  notificationModalGetCode,\n  notificationModalOpenServers,\n  notificationModalSubTitle,\n  notificationModalTitle,\n  notificationModalWarningMessage,\n} from '../../../consts/modal';\n\nconst NotificationModal = ({ setIsActive }: ModalProps) => {\n  const [value, setValue] = useState('');\n  const [isActiveModal, setIsActiveModal] = useState(false);\n\n  const [getCodeFunc, { data: code, isLoading: codeIsLoading, isError }] = userApi.useLazyGetCodeQuery();\n  const { data: contacts, isLoading } = userApi.useGetContactsForNoticesQuery();\n\n  const getCodeHandler = () => getCodeFunc();\n\n  useEffect(() => {\n    code && setValue(code?.data);\n  }, [code]);\n\n  useEffect(() => {\n    isError ? setIsActiveModal(true) : setIsActiveModal(false);\n  }, [isError]);\n\n  if (isLoading) {\n    return (\n      <Modal setIsActive={setIsActive} headerTitle=\"Будь в курсе новостей!\" className=\"notificationModal\">\n        <Loader />\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <Modal setIsActive={setIsActive} headerTitle={useLang(notificationModalTitle)} className=\"notificationModal\">\n        <>\n          <div className=\"description\">{useLang(notificationModalSubTitle)}</div>\n          <p className=\"copyText\">{useLang(notificationModalCopyTheCode)}</p>\n          {codeIsLoading ? (\n            <Loader mt=\"-25px\" />\n          ) : code ? (\n            <div className=\"notificationInputWrap\">\n              <button className={`input notificationInput`}>{value}</button>\n              <Copy className=\"notificationCopy\" value={value} />\n            </div>\n          ) : (\n            <button onClick={getCodeHandler} className=\"btn lightBtn codeBtn\">\n              {useLang(notificationModalGetCode)}\n            </button>\n          )}\n          <div className=\"boxButtons\">\n            {contacts?.map((it, index) => (\n              <Link to={it.url} target=\"_blank\" key={index}>\n                <button className=\"btn blackBtn netWorkBtn\">\n                  <img src={it.icon} alt=\"\" className=\"iconInBtn\" />\n                  <p>\n                    {useLang(notificationModalBind)} {it.name}\n                  </p>\n                </button>\n              </Link>\n            ))}\n          </div>\n          <WarningMessage text={useLang(notificationModalWarningMessage)} />\n          <Link to=\"/servers\">\n            <p className=\"textOpenServers\">{useLang(notificationModalOpenServers)}</p>\n          </Link>\n        </>\n      </Modal>\n      {isError && isActiveModal && <UnauthorizedModal setIsActive={setIsActiveModal} />}\n    </>\n  );\n};\nexport default NotificationModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}