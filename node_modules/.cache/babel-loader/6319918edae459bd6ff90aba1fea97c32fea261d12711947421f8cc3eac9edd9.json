{"ast":null,"code":"var _jsxFileName = \"/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Modals/TopUp/TopUpModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../../../assets/scss/components/modals/_top-up-modal.scss\";\nimport ruble from \"../../../assets/img/Ruble.svg\";\nimport { useBodyScrollModal } from \"../../../hooks/useBodyScrollModal\";\nimport Input from \"../../UI/Input\";\nimport svg from \"../../../assets/img/SBP.svg\";\nimport Modal from \"../../UI/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst item = [{\n  count: 50,\n  procent: 15\n}, {\n  count: 150,\n  procent: 15\n}, {\n  count: 500,\n  procent: 15\n}, {\n  count: 750,\n  procent: 15\n}];\nconst data = [{\n  img: svg,\n  topTitle: \"Gamemoney\",\n  bottomTitle: \"Банковская карта\",\n  percentages: 12\n}, {\n  img: svg,\n  topTitle: \"Gamemoney\",\n  bottomTitle: \"Банковская карта\",\n  percentages: 18\n}, {\n  img: svg,\n  topTitle: \"Gamemoney\",\n  bottomTitle: \"Банковская карта\",\n  percentages: 15\n}, {\n  img: svg,\n  topTitle: \"Gamemoney\",\n  bottomTitle: \"Банковская карта\",\n  percentages: 16\n}, {\n  img: svg,\n  topTitle: \"Gamemoney\",\n  bottomTitle: \"Банковская карта\",\n  percentages: 8\n}];\nconst selectItems = [\"Все\", \"Деньги\", \"Скины\", \"Крипта\"];\nconst TopUpModal = _ref => {\n  _s();\n  let {\n    setIsActive\n  } = _ref;\n  // const [refillFunc] = userApi.useRefillMutation();\n\n  const [activeSelect, setActiveSelect] = useState(0);\n  const [amountInput, setAmountInput] = useState(\"\");\n  const [promoInput, setPromoInput] = useState(\"\");\n  const [activePayments, setActivePayments] = useState(0);\n  const [currentPercentages, setCurrentPercentages] = useState(0);\n  useBodyScrollModal();\n  const [id, setId] = useState(localStorage.getItem(\"activeServer\") != null ? Number(localStorage.getItem(\"activeServer\")) : null);\n  useEffect(() => {\n    localStorage.setItem(\"activeServer\", JSON.stringify(id));\n  }, [id]);\n  const handlerButton = async () => {\n    if (amountInput && +amountInput > 0) {\n      // await refillFunc(+amountInput).unwrap();\n      setIsActive(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    headerTitle: \"Пополнение средств\",\n    setIsActive: setIsActive,\n    isSelect: true,\n    modalHeaderBottom: 20,\n    className: \"topUp\",\n    isTopUp: true,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canBeTranslatedInputItem inputBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            svgIcon: ruble,\n            isNumber: true,\n            value: amountInput,\n            setValue: setAmountInput,\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlerButton,\n          className: \"btn greenBtn wideBtn\",\n          children: \"\\u041F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(TopUpModal, \"C+DH+bI8RX4itmzG3Raz6YHg/W0=\", false, function () {\n  return [useBodyScrollModal];\n});\n_c = TopUpModal;\nexport default TopUpModal;\nvar _c;\n$RefreshReg$(_c, \"TopUpModal\");","map":{"version":3,"names":["React","useState","useEffect","ruble","useBodyScrollModal","Input","svg","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","item","count","procent","data","img","topTitle","bottomTitle","percentages","selectItems","TopUpModal","_ref","_s","setIsActive","activeSelect","setActiveSelect","amountInput","setAmountInput","promoInput","setPromoInput","activePayments","setActivePayments","currentPercentages","setCurrentPercentages","id","setId","localStorage","getItem","Number","setItem","JSON","stringify","handlerButton","headerTitle","isSelect","modalHeaderBottom","className","isTopUp","children","fileName","_jsxFileName","lineNumber","columnNumber","svgIcon","isNumber","value","setValue","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Modals/TopUp/TopUpModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../../../assets/scss/components/modals/_top-up-modal.scss\";\nimport ruble from \"../../../assets/img/Ruble.svg\";\nimport { useBodyScrollModal } from \"../../../hooks/useBodyScrollModal\";\nimport Input from \"../../UI/Input\";\nimport TopUpItem from \"./TopUpItem\";\nimport svg from \"../../../assets/img/SBP.svg\";\nimport ProgressBar from \"../ProgressBar\";\nimport BottomSide from \"./BottomSide\";\nimport { userApi } from \"../../../store\";\nimport Modal from \"../../UI/Modal\";\n\ninterface TopUpModalProps {\n  setIsActive: (param: boolean) => void;\n}\n\nconst item = [\n  {\n    count: 50,\n    procent: 15,\n  },\n  {\n    count: 150,\n    procent: 15,\n  },\n  {\n    count: 500,\n    procent: 15,\n  },\n  {\n    count: 750,\n    procent: 15,\n  },\n];\n\nconst data = [\n  {\n    img: svg,\n    topTitle: \"Gamemoney\",\n    bottomTitle: \"Банковская карта\",\n    percentages: 12,\n  },\n  {\n    img: svg,\n    topTitle: \"Gamemoney\",\n    bottomTitle: \"Банковская карта\",\n    percentages: 18,\n  },\n  {\n    img: svg,\n    topTitle: \"Gamemoney\",\n    bottomTitle: \"Банковская карта\",\n    percentages: 15,\n  },\n  {\n    img: svg,\n    topTitle: \"Gamemoney\",\n    bottomTitle: \"Банковская карта\",\n    percentages: 16,\n  },\n  {\n    img: svg,\n    topTitle: \"Gamemoney\",\n    bottomTitle: \"Банковская карта\",\n    percentages: 8,\n  },\n];\n\nconst selectItems = [\"Все\", \"Деньги\", \"Скины\", \"Крипта\"];\n\nconst TopUpModal = ({ setIsActive }: TopUpModalProps) => {\n  // const [refillFunc] = userApi.useRefillMutation();\n\n  const [activeSelect, setActiveSelect] = useState(0);\n  const [amountInput, setAmountInput] = useState(\"\");\n  const [promoInput, setPromoInput] = useState(\"\");\n  const [activePayments, setActivePayments] = useState(0);\n  const [currentPercentages, setCurrentPercentages] = useState(0);\n\n  useBodyScrollModal();\n\n  const [id, setId] = useState<number | null>(\n    localStorage.getItem(\"activeServer\") != null\n      ? Number(localStorage.getItem(\"activeServer\"))\n      : null\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"activeServer\", JSON.stringify(id));\n  }, [id]);\n\n  const handlerButton = async () => {\n    if (amountInput && +amountInput > 0) {\n      // await refillFunc(+amountInput).unwrap();\n      setIsActive(false);\n    }\n  };\n  return (\n    <Modal\n      headerTitle={\"Пополнение средств\"}\n      setIsActive={setIsActive}\n      isSelect\n      modalHeaderBottom={20}\n      className=\"topUp\"\n      isTopUp\n    >\n      <>\n        {/* нужный кусок\n        <div className=\"select\">\n              {selectItems.map((el, index) => (\n                <div\n                  onClick={() => setActiveSelect(index)}\n                  className={`selectItem ${activeSelect === index ? 'selectItemActive' : ''}`}\n                  key={index}\n                >\n                  {el}\n                </div>\n              ))}\n            </div> */}\n        {/* <div className=\"payments\">\n          {[...data, ...data].map((el, index) => (\n            <TopUpItem\n              setCurrentPercentages={setCurrentPercentages}\n              activePayments={activePayments}\n              setActivePayments={setActivePayments}\n              index={index}\n              {...el}\n              key={index}\n            />\n          ))}\n        </div> */}\n        <div>\n          <div className=\"canBeTranslatedInputItem inputBlock\">\n            <h4 className=\"mb12\">{}</h4>\n            <Input\n              svgIcon={ruble}\n              isNumber\n              value={amountInput}\n              setValue={setAmountInput}\n              placeholder={\"\"}\n            />\n          </div>\n\n          <button onClick={handlerButton} className=\"btn greenBtn wideBtn\">\n            Пополнить\n          </button>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default TopUpModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}