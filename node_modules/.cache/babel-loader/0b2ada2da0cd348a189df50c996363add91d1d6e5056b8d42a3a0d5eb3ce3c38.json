{"ast":null,"code":"var _jsxFileName = \"/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { authApi } from \"../store\";\nimport { Formik } from \"formik\";\nimport \"../assets/scss/pages/_login.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [logIn, {\n    data: dataLogIn = null,\n    error: errorLogIn\n  }] = authApi.useLazySteamLoginQuery();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [token, setToken] = useState(undefined);\n  const query = new URLSearchParams(location.search);\n\n  //   useEffect(() => {\n  //     const accessToken = localStorage.getItem(\"accessToken\");\n  //     if (accessToken === null) {\n  //       const openidparams = query.get(\"openid.identity\");\n\n  //       if (openidparams) {\n  //         const openId = openidparams.replace(\n  //           \"https://steamcommunity.com/openid/id/\",\n  //           \"\"\n  //         );\n  //         if (openId !== undefined) {\n  //           logIn({ id: openId, body: query.toString() }).catch(() =>\n  //             navigate(\"/\")\n  //           );\n  //         }\n  //       } else {\n  //         navigate(\"/\");\n  //       }\n  //     } else {\n  //       setToken(accessToken);\n  //     }\n  //   }, []);\n\n  useEffect(() => {\n    if (errorLogIn) {\n      navigate(\"/\");\n    } else {\n      if (dataLogIn !== null) {\n        const token = dataLogIn === null || dataLogIn === void 0 ? void 0 : dataLogIn.accessToken;\n        const user = dataLogIn === null || dataLogIn === void 0 ? void 0 : dataLogIn.user;\n        const refreshToken = dataLogIn === null || dataLogIn === void 0 ? void 0 : dataLogIn.refreshToken;\n        if (token !== undefined && refreshToken != undefined) {\n          localStorage.setItem(\"accessToken\", token);\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          window.location.reload();\n        } else {\n          navigate(\"/\");\n        }\n      }\n    }\n  }, [dataLogIn, errorLogIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-formik-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0412\\u041E\\u0419\\u0422\\u0418\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validate: values => {\n          const errors = {};\n          if (!values.email) {\n            //@ts-ignore\n            errors.email = \"Required\";\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            //@ts-ignore\n            errors.email = \"Invalid email address\";\n          }\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n            /* and other goodies */\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"box-form-login\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              className: \"input\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              className: \"input\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              className: \"lightBtn\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"+ftEPyTkD5MstuIZgynfe/ZOPxc=\", false, function () {\n  return [authApi.useLazySteamLoginQuery, useLocation, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","authApi","Formik","jsxDEV","_jsxDEV","Login","_s","logIn","data","dataLogIn","error","errorLogIn","useLazySteamLoginQuery","location","navigate","token","setToken","undefined","query","URLSearchParams","search","accessToken","user","refreshToken","localStorage","setItem","JSON","stringify","window","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","email","password","validate","values","errors","test","onSubmit","_ref","setSubmitting","setTimeout","alert","_ref2","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","name","onChange","onBlur","value","disabled","_c","$RefreshReg$"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/pages/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { authApi } from \"../store\";\nimport { UserData } from \"../types/authTypes\";\nimport Input from \"../components/UI/Input\";\nimport { Formik } from \"formik\";\nimport \"../assets/scss/pages/_login.scss\";\n\nconst Login = () => {\n  const [logIn, { data: dataLogIn = null, error: errorLogIn }] =\n    authApi.useLazySteamLoginQuery();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [token, setToken] = useState<undefined | string>(undefined);\n  const query = new URLSearchParams(location.search);\n\n  //   useEffect(() => {\n  //     const accessToken = localStorage.getItem(\"accessToken\");\n  //     if (accessToken === null) {\n  //       const openidparams = query.get(\"openid.identity\");\n\n  //       if (openidparams) {\n  //         const openId = openidparams.replace(\n  //           \"https://steamcommunity.com/openid/id/\",\n  //           \"\"\n  //         );\n  //         if (openId !== undefined) {\n  //           logIn({ id: openId, body: query.toString() }).catch(() =>\n  //             navigate(\"/\")\n  //           );\n  //         }\n  //       } else {\n  //         navigate(\"/\");\n  //       }\n  //     } else {\n  //       setToken(accessToken);\n  //     }\n  //   }, []);\n\n  useEffect(() => {\n    if (errorLogIn) {\n      navigate(\"/\");\n    } else {\n      if (dataLogIn !== null) {\n        const token: string | undefined = dataLogIn?.accessToken;\n        const user: UserData | undefined = dataLogIn?.user;\n        const refreshToken: string | undefined = dataLogIn?.refreshToken;\n        if (token !== undefined && refreshToken != undefined) {\n          localStorage.setItem(\"accessToken\", token);\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          window.location.reload();\n        } else {\n          navigate(\"/\");\n        }\n      }\n    }\n  }, [dataLogIn, errorLogIn]);\n\n  return (\n    <div className=\"box-login-page\">\n      <div className=\"box-formik-login\">\n        <h1>ВОЙТИ</h1>\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          validate={(values) => {\n            const errors = {};\n            if (!values.email) {\n              //@ts-ignore\n              errors.email = \"Required\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              //@ts-ignore\n              errors.email = \"Invalid email address\";\n            }\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            /* and other goodies */\n          }) => (\n            <form onSubmit={handleSubmit} className=\"box-form-login\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"input\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && errors.email}\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"input\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password && errors.password}\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"lightBtn\"\n              >\n                Submit\n              </button>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}