{"ast":null,"code":"var _jsxFileName = \"/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Main/CreateCaseModal.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Modal from \"../UI/Modal\";\nimport { Formik, useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateCaseModal = _ref => {\n  _s();\n  let {\n    isActive,\n    setIsActive\n  } = _ref;\n  const formikProps = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.email || !values.password) {\n        //@ts-ignore\n        errors.email = \"Заполните все поля\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        //@ts-ignore\n        errors.email = \"Некорректный адрес электронной почты\";\n      }\n      if (values.password.length < 8) {\n        //@ts-ignore\n        errors.password = \"Некорректный пароль\";\n      }\n      return errors;\n    },\n    onSubmit: (values, _ref2) => {\n      let {\n        setSubmitting\n      } = _ref2;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isActive: isActive,\n    setIsActive: setIsActive,\n    headerTitle: \"Cоздание заказа\",\n    className: \"monitoringModal\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monitoringModalContainer\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            acceptedTerms: false,\n            // added for our checkbox\n            jobType: \"\" // added for our select\n          },\n\n          validationSchema: Yup.object({\n            firstName: Yup.string().max(15, \"Must be 15 characters or less\").required(\"Required\"),\n            lastName: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Required\"),\n            email: Yup.string().email(\"Invalid email addresss`\").required(\"Required\"),\n            acceptedTerms: Yup.boolean().required(\"Required\").oneOf([true], \"You must accept the terms and conditions.\"),\n            jobType: Yup.string()\n            // specify the set of valid values for job type\n            // @see http://bit.ly/yup-mixed-oneOf\n            .oneOf([\"designer\", \"development\", \"product\", \"other\"], \"Invalid Job Type\").required(\"Required\")\n          }),\n          onSubmit: (values, _ref3) => {\n            let {\n              setSubmitting\n            } = _ref3;\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              setSubmitting(false);\n            }, 400);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(MyTextArea, {\n              label: \"First Name\",\n              name: \"firstName\",\n              rows: \"6\",\n              placeholder: \"Once upon a time there was a princess who lived at the top of a glass hill.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              type: \"text\",\n              placeholder: \"Doe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n              label: \"Email Address\",\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"jane@formik.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n              label: \"Job Type\",\n              name: \"jobType\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a job type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"designer\",\n                children: \"Designer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"development\",\n                children: \"Developer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"product\",\n                children: \"Product Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MyCheckbox, {\n              name: \"acceptedTerms\",\n              children: \"I accept the terms and conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateCaseModal, \"bwO2lHmOEfM/BHfCAlIpoEj1pjY=\", false, function () {\n  return [useFormik];\n});\n_c = CreateCaseModal;\nexport default CreateCaseModal;\nvar _c;\n$RefreshReg$(_c, \"CreateCaseModal\");","map":{"version":3,"names":["React","Modal","Formik","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateCaseModal","_ref","_s","isActive","setIsActive","formikProps","initialValues","email","password","validate","values","errors","test","length","onSubmit","_ref2","setSubmitting","headerTitle","className","children","firstName","lastName","acceptedTerms","jobType","validationSchema","Yup","object","string","max","required","boolean","oneOf","_ref3","setTimeout","alert","JSON","stringify","Form","MyTextArea","label","name","rows","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","MyTextInput","type","MySelect","value","MyCheckbox","_c","$RefreshReg$"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/components/Main/CreateCaseModal.tsx"],"sourcesContent":["import React from \"react\";\nimport Modal from \"../UI/Modal\";\nimport { topUpMonitoringServers } from \"../../consts/modal\";\nimport { Formik, Field, useFormik, FormikProvider } from \"formik\";\n\ninterface MonitoringModalProps {\n  isActive: boolean;\n  setIsActive: (param: boolean) => void;\n}\n\nconst CreateCaseModal = ({ isActive, setIsActive }: MonitoringModalProps) => {\n  const formikProps = useFormik({\n    initialValues: { email: \"\", password: \"\" },\n    validate: (values) => {\n      const errors = {};\n      if (!values.email || !values.password) {\n        //@ts-ignore\n        errors.email = \"Заполните все поля\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        //@ts-ignore\n        errors.email = \"Некорректный адрес электронной почты\";\n      }\n      if (values.password.length < 8) {\n        //@ts-ignore\n        errors.password = \"Некорректный пароль\";\n      }\n      return errors;\n    },\n    onSubmit: (values, { setSubmitting }) => {},\n  });\n\n  return (\n    <Modal\n      isActive={isActive}\n      setIsActive={setIsActive}\n      headerTitle={\"Cоздание заказа\"}\n      className=\"monitoringModal\"\n    >\n      <>\n        <div className=\"monitoringModalContainer\">\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              lastName: \"\",\n              email: \"\",\n              acceptedTerms: false, // added for our checkbox\n              jobType: \"\", // added for our select\n            }}\n            validationSchema={Yup.object({\n              firstName: Yup.string()\n                .max(15, \"Must be 15 characters or less\")\n                .required(\"Required\"),\n              lastName: Yup.string()\n                .max(20, \"Must be 20 characters or less\")\n                .required(\"Required\"),\n              email: Yup.string()\n                .email(\"Invalid email addresss`\")\n                .required(\"Required\"),\n              acceptedTerms: Yup.boolean()\n                .required(\"Required\")\n                .oneOf([true], \"You must accept the terms and conditions.\"),\n              jobType: Yup.string()\n                // specify the set of valid values for job type\n                // @see http://bit.ly/yup-mixed-oneOf\n                .oneOf(\n                  [\"designer\", \"development\", \"product\", \"other\"],\n                  \"Invalid Job Type\"\n                )\n                .required(\"Required\"),\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                setSubmitting(false);\n              }, 400);\n            }}\n          >\n            <Form>\n              <MyTextArea\n                label=\"First Name\"\n                name=\"firstName\"\n                rows=\"6\"\n                placeholder=\"Once upon a time there was a princess who lived at the top of a glass hill.\"\n              />\n              <MyTextInput\n                label=\"Last Name\"\n                name=\"lastName\"\n                type=\"text\"\n                placeholder=\"Doe\"\n              />\n              <MyTextInput\n                label=\"Email Address\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"jane@formik.com\"\n              />\n              <MySelect label=\"Job Type\" name=\"jobType\">\n                <option value=\"\">Select a job type</option>\n                <option value=\"designer\">Designer</option>\n                <option value=\"development\">Developer</option>\n                <option value=\"product\">Product Manager</option>\n                <option value=\"other\">Other</option>\n              </MySelect>\n              <MyCheckbox name=\"acceptedTerms\">\n                I accept the terms and conditions\n              </MyCheckbox>\n\n              <button type=\"submit\">Submit</button>\n            </Form>\n          </Formik>\n        </div>\n      </>\n    </Modal>\n  );\n};\n\nexport default CreateCaseModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}