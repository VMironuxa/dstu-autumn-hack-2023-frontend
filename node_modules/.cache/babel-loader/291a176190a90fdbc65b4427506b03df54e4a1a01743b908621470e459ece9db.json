{"ast":null,"code":"import { createApi } from \"@reduxjs/toolkit/query/react\";\nimport { baseQuery } from \"./settings\";\nexport const userApi = createApi({\n  reducerPath: \"userApi\",\n  tagTypes: [\"user\"],\n  baseQuery,\n  endpoints: build => ({\n    getUser: build.query({\n      query: () => ({\n        url: `/user/me`,\n        method: \"GET\"\n      }),\n      providesTags: () => [\"user\"]\n    }),\n    changeFactor: build.mutation({\n      query: body => ({\n        url: `/profile/`,\n        method: \"PUT\",\n        body: body\n      }),\n      invalidatesTags: () => [\"user\"]\n    }),\n    getProfileId: build.query({\n      query: id => ({\n        url: `/user/${id}`,\n        method: \"GET\"\n      }),\n      providesTags: () => [\"user\"]\n    }),\n    ////////\n\n    changePhoto: build.mutation({\n      query: body => ({\n        url: `/user/logo`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"user\"]\n    }),\n    changeRole: build.mutation({\n      query: () => ({\n        url: `/user/change`,\n        method: \"POST\"\n      }),\n      invalidatesTags: () => [\"user\"]\n    }),\n    addBalance: build.mutation({\n      query: body => ({\n        url: `/user/balance`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"user\"]\n    }),\n    decreaseBalance: build.mutation({\n      query: body => ({\n        url: `/balance/decrease`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"user\"]\n    }),\n    getHistoryBalance: build.query({\n      query: _ref => {\n        let {\n          page\n        } = _ref;\n        return {\n          url: `/user/balance?page=${page}`,\n          method: \"GET\"\n        };\n      },\n      providesTags: () => [\"user\"]\n    }),\n    updateUser: build.mutation({\n      query: body => ({\n        url: `user/`,\n        method: \"PUT\",\n        body: body\n      }),\n      invalidatesTags: () => [\"user\"]\n    })\n  })\n});","map":{"version":3,"names":["createApi","baseQuery","userApi","reducerPath","tagTypes","endpoints","build","getUser","query","url","method","providesTags","changeFactor","mutation","body","invalidatesTags","getProfileId","id","changePhoto","changeRole","addBalance","decreaseBalance","getHistoryBalance","_ref","page","updateUser"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/services/userServices.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nimport { baseQuery } from \"./settings\";\nimport { user } from \"../types/userTypes\";\n\nexport const userApi = createApi({\n  reducerPath: \"userApi\",\n  tagTypes: [\"user\"],\n  baseQuery,\n  endpoints: (build) => ({\n    getUser: build.query<{ user: user }, void>({\n      query: () => ({\n        url: `/user/me`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"user\"],\n    }),\n    changeFactor: build.mutation<\n      any,\n      {\n        age?: number;\n        allergyToAnimals?: boolean;\n        carriageType?: string;\n        dislikeForChildren?: boolean;\n        familyStatus?: string;\n        hobbies?: string[];\n        language?: string[];\n        placePosition?: string;\n        psychotype?: string;\n        sex?: string;\n        snore?: boolean;\n      }\n    >({\n      query: (body) => ({\n        url: `/profile/`,\n        method: \"PUT\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n\n    getProfileId: build.query<{ user: user }, number | string>({\n      query: (id) => ({\n        url: `/user/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"user\"],\n    }),\n    ////////\n\n    changePhoto: build.mutation<any, any>({\n      query: (body) => ({\n        url: `/user/logo`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n    changeRole: build.mutation<any, void>({\n      query: () => ({\n        url: `/user/change`,\n        method: \"POST\",\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n\n    addBalance: build.mutation<\n      any,\n      {\n        balance: number;\n      }\n    >({\n      query: (body) => ({\n        url: `/user/balance`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n\n    decreaseBalance: build.mutation<\n      any,\n      {\n        sum: number;\n      }\n    >({\n      query: (body) => ({\n        url: `/balance/decrease`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n    getHistoryBalance: build.query<any, { page: number }>({\n      query: ({ page }) => ({\n        url: `/user/balance?page=${page}`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"user\"],\n    }),\n    updateUser: build.mutation<\n      any,\n      { email?: string; firstname?: string; lastname?: string; phone?: string }\n    >({\n      query: (body) => ({\n        url: `user/`,\n        method: \"PUT\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n  }),\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAwB,8BAA8B;AAExE,SAASC,SAAS,QAAQ,YAAY;AAGtC,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,SAAS;EACtBC,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBH,SAAS;EACTI,SAAS,EAAGC,KAAK,KAAM;IACrBC,OAAO,EAAED,KAAK,CAACE,KAAK,CAAuB;MACzCA,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAG,UAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;MACFC,YAAY,EAAEA,CAAA,KAAM,CAAC,MAAM;IAC7B,CAAC,CAAC;IACFC,YAAY,EAAEN,KAAK,CAACO,QAAQ,CAe1B;MACAL,KAAK,EAAGM,IAAI,KAAM;QAChBL,GAAG,EAAG,WAAU;QAChBC,MAAM,EAAE,KAAK;QACbI,IAAI,EAAEA;MACR,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC,CAAC;IAEFC,YAAY,EAAEV,KAAK,CAACE,KAAK,CAAkC;MACzDA,KAAK,EAAGS,EAAE,KAAM;QACdR,GAAG,EAAG,SAAQQ,EAAG,EAAC;QAClBP,MAAM,EAAE;MACV,CAAC,CAAC;MACFC,YAAY,EAAEA,CAAA,KAAM,CAAC,MAAM;IAC7B,CAAC,CAAC;IACF;;IAEAO,WAAW,EAAEZ,KAAK,CAACO,QAAQ,CAAW;MACpCL,KAAK,EAAGM,IAAI,KAAM;QAChBL,GAAG,EAAG,YAAW;QACjBC,MAAM,EAAE,MAAM;QACdI,IAAI,EAAEA;MACR,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC,CAAC;IACFI,UAAU,EAAEb,KAAK,CAACO,QAAQ,CAAY;MACpCL,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAG,cAAa;QACnBC,MAAM,EAAE;MACV,CAAC,CAAC;MACFK,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC,CAAC;IAEFK,UAAU,EAAEd,KAAK,CAACO,QAAQ,CAKxB;MACAL,KAAK,EAAGM,IAAI,KAAM;QAChBL,GAAG,EAAG,eAAc;QACpBC,MAAM,EAAE,MAAM;QACdI,IAAI,EAAEA;MACR,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC,CAAC;IAEFM,eAAe,EAAEf,KAAK,CAACO,QAAQ,CAK7B;MACAL,KAAK,EAAGM,IAAI,KAAM;QAChBL,GAAG,EAAG,mBAAkB;QACxBC,MAAM,EAAE,MAAM;QACdI,IAAI,EAAEA;MACR,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC,CAAC;IACFO,iBAAiB,EAAEhB,KAAK,CAACE,KAAK,CAAwB;MACpDA,KAAK,EAAEe,IAAA;QAAA,IAAC;UAAEC;QAAK,CAAC,GAAAD,IAAA;QAAA,OAAM;UACpBd,GAAG,EAAG,sBAAqBe,IAAK,EAAC;UACjCd,MAAM,EAAE;QACV,CAAC;MAAA,CAAC;MACFC,YAAY,EAAEA,CAAA,KAAM,CAAC,MAAM;IAC7B,CAAC,CAAC;IACFc,UAAU,EAAEnB,KAAK,CAACO,QAAQ,CAGxB;MACAL,KAAK,EAAGM,IAAI,KAAM;QAChBL,GAAG,EAAG,OAAM;QACZC,MAAM,EAAE,KAAK;QACbI,IAAI,EAAEA;MACR,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC;EACH,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}