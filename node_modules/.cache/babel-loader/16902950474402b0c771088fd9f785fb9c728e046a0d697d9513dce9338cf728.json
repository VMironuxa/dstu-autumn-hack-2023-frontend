{"ast":null,"code":"var _jsxFileName = \"/Users/mironuxa/Documents/GitHub/magicow-shop-front/src/components/Modals/SelectServerModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../UI/Modal';\nimport { useBodyScrollModal } from '../../hooks/useBodyScrollModal';\nimport { rustApi, userApi } from '../../store';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SelectServerModal = _ref => {\n  _s();\n  let {\n    setIsActive,\n    onLeadersPage,\n    id,\n    activeServer,\n    setActiveServer\n  } = _ref;\n  const {\n    data,\n    isLoading\n  } = rustApi.useGetServersByModeQuery();\n  const [localActiveServer, setLocalActiveServer] = useState(activeServer);\n  const [activateService] = userApi.useActivateServiceMutation();\n  useBodyScrollModal();\n  const onClickHandler = async () => {\n    if (id && localActiveServer && localActiveServer) {\n      await activateService({\n        id,\n        serverId: localActiveServer\n      });\n    } else {\n      setActiveServer(localActiveServer);\n    }\n    setIsActive(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    setIsActive: setIsActive,\n    headerTitle: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\",\n    className: \"selectServerModal\",\n    onLeadersPage: onLeadersPage,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectServer\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), !data || data.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"noRecords\",\n          children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0435\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 43\n        }, this), data === null || data === void 0 ? void 0 : data.map((el, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => setLocalActiveServer(el.id),\n          htmlFor: `radio${index}`,\n          className: \"radio-label\",\n          children: [el.name, /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"radio-input\",\n            type: \"radio\",\n            name: \"server\",\n            id: `radio${index}`,\n            onChange: e => setActiveServer(+e.target.value),\n            checked: index + 1 === localActiveServer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"custom-radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, el.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickHandler,\n        disabled: !localActiveServer,\n        className: `btn wideBtn ${localActiveServer ? 'lightBtn' : 'blackBtn'}`,\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectServerModal, \"y8737fkidxvN17A/cnHPRdvHpGw=\", false, function () {\n  return [rustApi.useGetServersByModeQuery, userApi.useActivateServiceMutation, useBodyScrollModal];\n});\n_c = SelectServerModal;\nexport default SelectServerModal;\nvar _c;\n$RefreshReg$(_c, \"SelectServerModal\");","map":{"version":3,"names":["React","useState","Modal","useBodyScrollModal","rustApi","userApi","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectServerModal","_ref","_s","setIsActive","onLeadersPage","id","activeServer","setActiveServer","data","isLoading","useGetServersByModeQuery","localActiveServer","setLocalActiveServer","activateService","useActivateServiceMutation","onClickHandler","serverId","headerTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","el","index","onClick","htmlFor","name","type","onChange","e","target","value","checked","disabled","_c","$RefreshReg$"],"sources":["/Users/mironuxa/Documents/GitHub/magicow-shop-front/src/components/Modals/SelectServerModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from '../UI/Modal';\nimport { useBodyScrollModal } from '../../hooks/useBodyScrollModal';\nimport { rustApi, userApi } from '../../store';\nimport Loader from '../Loader';\n\ninterface SelectServerModalProps {\n  setIsActive: (value: boolean) => void;\n  id?: number;\n  onLeadersPage?: boolean;\n  activeServer: number | null;\n  setActiveServer: (param: number | null) => void;\n}\n\nconst SelectServerModal = ({\n  setIsActive,\n  onLeadersPage,\n  id,\n  activeServer,\n  setActiveServer,\n}: SelectServerModalProps) => {\n  const { data, isLoading } = rustApi.useGetServersByModeQuery();\n  const [localActiveServer, setLocalActiveServer] = useState<number | null>(activeServer);\n  const [activateService] = userApi.useActivateServiceMutation();\n\n  useBodyScrollModal();\n\n  const onClickHandler = async () => {\n    if (id && localActiveServer && localActiveServer) {\n      await activateService({ id, serverId: localActiveServer });\n    } else {\n      setActiveServer(localActiveServer);\n    }\n    setIsActive(false);\n  };\n\n  return (\n    <Modal\n      setIsActive={setIsActive}\n      headerTitle=\"Выберите сервер\"\n      className=\"selectServerModal\"\n      onLeadersPage={onLeadersPage}\n    >\n      <>\n        <div className=\"selectServer\">\n          {isLoading && <Loader />}\n          {!data || (data.length === 0 && <h1 className=\"noRecords\">Нет записей</h1>)}\n          {data?.map((el, index) => (\n            <label\n              onClick={() => setLocalActiveServer(el.id)}\n              htmlFor={`radio${index}`}\n              className=\"radio-label\"\n              key={el.name}\n            >\n              {el.name}\n              <input\n                className=\"radio-input\"\n                type=\"radio\"\n                name=\"server\"\n                id={`radio${index}`}\n                onChange={e => setActiveServer(+e.target.value)}\n                checked={index + 1 === localActiveServer}\n              />\n              <span className=\"custom-radio\" />\n            </label>\n          ))}\n        </div>\n        <button\n          onClick={onClickHandler}\n          disabled={!localActiveServer}\n          className={`btn wideBtn ${localActiveServer ? 'lightBtn' : 'blackBtn'}`}\n        >\n          Подтвердить\n        </button>\n      </>\n    </Modal>\n  );\n};\n\nexport default SelectServerModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}