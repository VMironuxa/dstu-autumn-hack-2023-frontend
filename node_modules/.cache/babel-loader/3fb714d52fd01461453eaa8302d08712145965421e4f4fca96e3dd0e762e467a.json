{"ast":null,"code":"import { createApi } from \"@reduxjs/toolkit/query/react\";\nimport { baseQuery } from \"./settings\";\nexport const userApi = createApi({\n  reducerPath: \"userApi\",\n  tagTypes: [\"user\"],\n  baseQuery,\n  endpoints: build => ({\n    getUser: build.query({\n      query: id => ({\n        url: `/user/${id}`,\n        method: \"GET\"\n      }),\n      providesTags: () => [\"user\"]\n    }),\n    changePhoto: build.mutation({\n      query: body => ({\n        url: `/user/logo`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"user\"]\n    }),\n    changeRole: build.mutation({\n      query: () => ({\n        url: `/user/change`,\n        method: \"POST\"\n      }),\n      invalidatesTags: () => [\"user\"]\n    }),\n    addBalance: build.mutation({\n      query: body => ({\n        url: `/api/balance/topup`,\n        method: \"POST\",\n        body: body\n      }),\n      invalidatesTags: () => [\"user\"]\n    })\n  })\n});","map":{"version":3,"names":["createApi","baseQuery","userApi","reducerPath","tagTypes","endpoints","build","getUser","query","id","url","method","providesTags","changePhoto","mutation","body","invalidatesTags","changeRole","addBalance"],"sources":["/Users/mironuxa/Documents/GitHub/opportunity-cup-frontend/src/services/userServices.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nimport { baseQuery } from \"./settings\";\nimport { user } from \"../types/userTypes\";\n\nexport const userApi = createApi({\n  reducerPath: \"userApi\",\n  tagTypes: [\"user\"],\n  baseQuery,\n  endpoints: (build) => ({\n    getUser: build.query<{ user: user }, string>({\n      query: (id) => ({\n        url: `/user/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: () => [\"user\"],\n    }),\n    changePhoto: build.mutation<any, any>({\n      query: (body) => ({\n        url: `/user/logo`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n    changeRole: build.mutation<any, void>({\n      query: () => ({\n        url: `/user/change`,\n        method: \"POST\",\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n    addBalance: build.mutation<\n      any,\n      {\n        sum: number;\n      }\n    >({\n      query: (body) => ({\n        url: `/api/balance/topup`,\n        method: \"POST\",\n        body: body,\n      }),\n      invalidatesTags: () => [\"user\"],\n    }),\n  }),\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAwB,8BAA8B;AAExE,SAASC,SAAS,QAAQ,YAAY;AAGtC,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,SAAS;EACtBC,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBH,SAAS;EACTI,SAAS,EAAGC,KAAK,KAAM;IACrBC,OAAO,EAAED,KAAK,CAACE,KAAK,CAAyB;MAC3CA,KAAK,EAAGC,EAAE,KAAM;QACdC,GAAG,EAAG,SAAQD,EAAG,EAAC;QAClBE,MAAM,EAAE;MACV,CAAC,CAAC;MACFC,YAAY,EAAEA,CAAA,KAAM,CAAC,MAAM;IAC7B,CAAC,CAAC;IACFC,WAAW,EAAEP,KAAK,CAACQ,QAAQ,CAAW;MACpCN,KAAK,EAAGO,IAAI,KAAM;QAChBL,GAAG,EAAG,YAAW;QACjBC,MAAM,EAAE,MAAM;QACdI,IAAI,EAAEA;MACR,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC,CAAC;IACFC,UAAU,EAAEX,KAAK,CAACQ,QAAQ,CAAY;MACpCN,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAG,cAAa;QACnBC,MAAM,EAAE;MACV,CAAC,CAAC;MACFK,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC,CAAC;IACFE,UAAU,EAAEZ,KAAK,CAACQ,QAAQ,CAKxB;MACAN,KAAK,EAAGO,IAAI,KAAM;QAChBL,GAAG,EAAG,oBAAmB;QACzBC,MAAM,EAAE,MAAM;QACdI,IAAI,EAAEA;MACR,CAAC,CAAC;MACFC,eAAe,EAAEA,CAAA,KAAM,CAAC,MAAM;IAChC,CAAC;EACH,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}